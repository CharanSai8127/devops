pipeline {
    agent any
    
    tools {
        jdk 'jdk 17'
        maven 'maven'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git-checkout') {
            steps {
                git 'https://github.com/CharanSai8127/BoardgameListingWebApp.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('Tests') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }
        
        stage('Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Sonar-analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner \
                    -Dsonar.projectName=Boardgame \
                    -Dsonar.projectKey=Board \
                    -Dsonar.java.binaries=.
                    '''
                }
            }
        }
        
        stage('Quality-gate') {
            steps {
                waitForQualityGate abortPipeline: false
            }
        }
        
        stage('Deploy to nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'global-maven-settings', jdk: 'jdk 17', maven: 'maven', mavenSettingsConfig: '', traceability: false) {
                   sh 'mvn deploy'
               }
            }
        }
        
        stage('Docker-Build') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                       sh 'docker build -t game .'
                       sh 'docker tag board:latest charansait372/game'
                    }
                }
            }
        }
        
        
        
        stage('Docker-Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker push charansait372/game'
                    }
                }
            }
        }
        
        stage('Deploy-to-container') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker run -d --name board -p 8082:8080 charansait372/game'
                    }
                }
            }
        }
    }
}
