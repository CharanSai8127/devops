pipeline {
    agent any
    
    tools {
        jdk 'jdk 17'
        maven 'maven'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    stages {
        stage('Git') {
            steps {
                git 'https://github.com/CharanSai8127/BoardgameListingWebApp.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('Tests') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }
        
        stage('Owasp-dependency-check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-results.xml'
            }
        }
        
        stage('Sonar-analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh """$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Boardgame -Dsonar.projectKey=Board \
                    -Dsonar.java.binaries=. """
                }
            }
        }
        
        stage('Quality-gate-check') {
            steps {
                waitForQualityGate abortPipeline: false
            }
        }
        
        stage('Deploy to Nexus') {
            steps {
               withMaven(globalMavenSettingsConfig: '', jdk: 'jdk 17', maven: 'maven', mavenSettingsConfig: '', traceability: true) {
                  sh 'mvn deploy'
                }
            }
        }
        
        stage('Docker') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker build -t boardgame:latest .'
                        sh 'docker tag boardgame:latest charansait372/boardgame:latest'
                    }   
                }
            }
        }
        
        stage('Trivy-image') {
            steps {
                sh 'trivy image charansait372/boardgame:latest'
            }
        }
        
        stage('Push the Docker image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker push charansait372/boardgame:latest'
                    }   
                }
            }
        }
        
        stage('Deploy the application to Docker Container') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker run -d --name full-stack -p 8085:8080 charansait372/boardgame:latest'
                    }   
                }
            }
        }
    }
}
