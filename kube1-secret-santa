pipeline {
    agent any
    
    tools {
        jdk 'jdk 17'
        maven 'maven 3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git-checkout') {
            steps {
                git 'https://github.com/CharanSai8127/secretsanta-generator.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile -Dmaven.test.failure.ignore=true'
            }
        }
        
        stage('Package') {
            steps {
                sh 'mvn package -DskipTests=true'
            }
        }
        
        stage('Owasp') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Sonar') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=Secret-santa \
                        -Dsonar.projectKey=Secret-santa \
                        -Dsonar.java.binaries=target/classes
                    '''
                }
            }
        }
        
        stage('Build') {
            steps {
                withMaven(globalMavenSettingsConfig: '', jdk: 'jdk 17', maven: 'maven 3', mavenSettingsConfig: 'maven-settings', traceability: true) {
                    sh 'mvn deploy '
                }
            }
        }
        
        stage('Docker') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker build -t charansait372/santa-secret:v97  .'
                    }
                }
            }
        }
        
        stage('Trivy') {
            steps {
                sh 'trivy image  --format table -o trivy-report.html charansait372/santa-secret:v97'
            }
        }
        
        stage('Docker push image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker push charansait372/santa-secret:v97'
                    }
                }
            }
        }
        
        stage('Kubernetes') {
            steps {
                script {
                    sh 'ls -l'  // Debugging step to check for dep.yml
                    withKubeConfig(caCertificate: '', clusterName: 'kubernetes', contextName: '', credentialsId: 'k8-auth', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://65.2.191.85:6443') {
                        sh 'kubectl apply -f k8-dep-svc.yml'
                        sh 'kubectl get svc -n webapps'
                    }
                }
            }
        }
    }
}
